user www-data www-data;
worker_processes auto;

error_log /dev/stdout info;

events {
    worker_connections 1024;
}

http {
    include          mime.types;
    default_type     application/octet-stream;
    set_real_ip_from 0.0.0.0/0;

    proxy_connect_timeout       300;
    proxy_send_timeout          300;
    proxy_read_timeout          300;
    send_timeout                300;

    server {
        listen 127.0.0.1:81;
        server_name _;

        root /var/www/public;

        charset UTF-8;

        location ~ /\. {
            log_not_found off;
            deny all;
        }

        location / {
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/(bundles|js|css|dist|cache) {
            location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|html|json)$ {
                add_header Cache-Control "public";
                add_header X-Frame-Options "SAMEORIGIN";
                expires +1y;
            }

            location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
                add_header Cache-Control "no-store";
                add_header X-Frame-Options "SAMEORIGIN";
                expires    off;
            }

            add_header X-Frame-Options "SAMEORIGIN";
        }

        set $fcgi_https $https;

        if ($http_x_forwarded_proto = "https") {
            set $fcgi_https on;
        }

        # Initialize website_code variable - will be set in location blocks
        set $website_code "";

        location ~ ^/(index|index_dev|config|install)\.php(/|$) {
            # Extract WEBSITE_CODE from URI - works for both direct and proxied requests
            set $website_code "";
            if ($uri ~* ^/([a-zA-Z0-9_-]+)(?:/|$)) {
                set $website_code $1;
            }
            
            # Set default website code if empty
            if ($website_code = "") {
                set $website_code "default";
            }
            
            # Add WEBSITE_CODE to response headers for debugging
            add_header X-Website-Code $website_code always;
            add_header X-Website-Path $website_code always;
            
            fastcgi_pass            fpm:9000;
            fastcgi_buffers 16      16k;
            fastcgi_buffer_size     32k;

            fastcgi_read_timeout    300s;
            fastcgi_connect_timeout 300s;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_index           index.php;
            fastcgi_param           SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param           HTTPS $fcgi_https;
            fastcgi_param           XHGUI_MONGO_HOSTNAME  mongodb;
            fastcgi_param           XHGUI_MONGO_PORT  27017;
            fastcgi_param           XHGUI_MONGO_DATABASE  xhprof;
            fastcgi_param           WEBSITE_CODE $website_code;
            fastcgi_param           WEBSITE_PATH $website_code;
            include                 fastcgi_params;
            fastcgi_param           REMOTE_ADDR "127.0.0.1";
        }

        location /ws {
            # redirect all traffic to localhost:8080;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://websocket:8080/$is_args$args;
            proxy_redirect off;
            proxy_read_timeout 86400;

            # enables WS support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # prevents 502 bad gateway error
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;

            reset_timedout_connection on;
        }
    }

    server {
        listen 0.0.0.0:80;
        server_name _;

        location / {
            proxy_pass http://127.0.0.1:81;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For "";

            proxy_connect_timeout       300s;
            proxy_send_timeout          300s;
            proxy_read_timeout          300s;
            send_timeout                300s;
        }
    }
}
