name: Build & Publish PHP Base and PHP+Node.js multi-arch images to GHCR

on:
  push:
    branches: [ master ]
    paths:
      - 'compose/docker/php/**'
      - 'compose/docker/php-node-symfony/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-build-${{ github.job }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  # ========================================
  # STAGE 1: BASE PHP IMAGES
  # ========================================
  
  build-php-7-4-amd64:
    name: Build PHP 7.4 Base (AMD64)
    runs-on: [self-hosted, Linux, X64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["7.4"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Base ${{ matrix.php }}-${{ matrix.variant }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/amd64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-amd64 \
              --build-arg PHP_VERSION=${{ matrix.php }} \
              --build-arg COMPOSER_VERSION=${{ matrix.composer }} \
              --cache-from type=gha,scope=php-base-${{ matrix.php }}-amd64 \
              --cache-to type=gha,mode=max,scope=php-base-${{ matrix.php }}-amd64 \
              --load \
              compose/docker/php
      
      # Push with retry (handles network errors)
      - name: Push PHP Base ${{ matrix.php }}-${{ matrix.variant }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-amd64

  build-php-7-4-arm64:
    name: Build PHP 7.4 Base (ARM64)
    runs-on: [self-hosted, Linux, ARM64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["7.4"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Base ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/arm64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-arm64 \
              --cache-from type=gha,scope=php-base-${{ matrix.php }}-arm64 \
              --cache-to type=gha,mode=max,scope=php-base-${{ matrix.php }}-arm64 \
              --load \
              compose/docker/php
      
      # Push with retry (handles network errors)
      - name: Push PHP Base ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-arm64
  create-php-7-4-manifest:
    name: Create PHP 7.4 Base multi-arch manifests
    needs: [build-php-7-4-amd64, build-php-7-4-arm64]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["7.4"]
        variant:  ["alpine"]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-arch manifest for PHP Base ${{ matrix.php }}-${{ matrix.variant }}
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }} \
            ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-arm64

  build-php-8-x-amd64:
    name: Build PHP 8.x Base (AMD64)
    runs-on: [self-hosted, Linux, X64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.1","8.2","8.3","8.4"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Base ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/amd64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-amd64 \
              --cache-from type=gha,scope=php-base-${{ matrix.php }}-amd64 \
              --cache-to type=gha,mode=max,scope=php-base-${{ matrix.php }}-amd64 \
              --load \
              compose/docker/php
      
      # Push with retry (handles network errors)
      - name: Push PHP Base ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-amd64
  build-php-8-x-arm64:
    name: Build PHP 8.x Base (ARM64)
    runs-on: [self-hosted, Linux, ARM64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.1","8.2","8.3","8.4"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Base ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/arm64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-arm64 \
              --cache-from type=gha,scope=php-base-${{ matrix.php }}-arm64 \
              --cache-to type=gha,mode=max,scope=php-base-${{ matrix.php }}-arm64 \
              --load \
              compose/docker/php
      
      # Push with retry (handles network errors)
      - name: Push PHP Base ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-arm64
  create-php-8-x-manifest:
    name: Create PHP 8.x Base multi-arch manifests
    needs: [build-php-8-x-amd64, build-php-8-x-arm64]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.1","8.2","8.3","8.4"]
        variant:  ["alpine"]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-arch manifest for PHP Base ${{ matrix.php }}-${{ matrix.variant }}
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }} \
            ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/orodc-php:${{ matrix.php }}-${{ matrix.variant }}-arm64

  build-php-8-5-amd64:
    name: Build PHP 8.5 Base (AMD64)
    runs-on: [self-hosted, Linux, X64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.5"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Base ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/amd64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php:8.5-rc-${{ matrix.variant }}-amd64 \
              --cache-from type=gha,scope=php-base-${{ matrix.php }}-amd64 \
              --cache-to type=gha,mode=max,scope=php-base-${{ matrix.php }}-amd64 \
              --load \
              compose/docker/php
      
      # Push with retry (handles network errors)
      - name: Push PHP Base ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php:8.5-rc-${{ matrix.variant }}-amd64
  build-php-8-5-arm64:
    name: Build PHP 8.5 Base (ARM64)
    runs-on: [self-hosted, Linux, ARM64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.5"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Base ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/arm64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php:8.5-rc-${{ matrix.variant }}-arm64 \
              --cache-from type=gha,scope=php-base-${{ matrix.php }}-arm64 \
              --cache-to type=gha,mode=max,scope=php-base-${{ matrix.php }}-arm64 \
              --load \
              compose/docker/php
      
      # Push with retry (handles network errors)
      - name: Push PHP Base ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php:8.5-rc-${{ matrix.variant }}-arm64
  create-php-8-5-manifest:
    name: Create PHP 8.5 Base multi-arch manifests
    needs: [build-php-8-5-amd64, build-php-8-5-arm64]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.5"]
        variant:  ["alpine"]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-arch manifest for PHP Base 8.5-rc-${{ matrix.variant }}
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/orodc-php:8.5-rc-${{ matrix.variant }} \
            ghcr.io/${{ github.repository_owner }}/orodc-php:8.5-rc-${{ matrix.variant }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/orodc-php:8.5-rc-${{ matrix.variant }}-arm64

  # ========================================
  # STAGE 2: FINAL PHP+NODE.JS IMAGES
  # ========================================
  
  build-php-node-7-4-amd64:
    name: Build PHP 7.4 + Node.js images (AMD64)
    needs: [create-php-7-4-manifest]
    runs-on: [self-hosted, Linux, X64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["7.4"]
        node:     ["16","18"]
        composer: ["1","2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Final ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/amd64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64 \
              --cache-from type=gha,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-amd64 \
              --cache-to type=gha,mode=max,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-amd64 \
              --load \
              compose/docker/php-node-symfony
      
      # Push with retry (handles network errors)
      - name: Push PHP Final ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64
  build-php-node-7-4-arm64:
    name: Build PHP 7.4 + Node.js images (ARM64)
    needs: [create-php-7-4-manifest]
    runs-on: [self-hosted, Linux, ARM64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["7.4"]
        node:     ["16","18"]
        composer: ["1","2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Final ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/arm64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64 \
              --cache-from type=gha,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-arm64 \
              --cache-to type=gha,mode=max,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-arm64 \
              --load \
              compose/docker/php-node-symfony
      
      # Push with retry (handles network errors)
      - name: Push PHP Final ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64
  create-php-node-7-4-manifest:
    name: Create PHP 7.4 + Node.js multi-arch manifests
    needs: [build-php-node-7-4-amd64, build-php-node-7-4-arm64]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["7.4"]
        node:     ["16","18"]
        composer: ["1","2"]
        variant:  ["alpine"]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-arch manifest for ${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }} \
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64

  build-php-node-8-x-amd64:
    name: Build PHP 8.x + Node.js images (AMD64)
    needs: [create-php-8-x-manifest]
    runs-on: [self-hosted, Linux, X64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.1","8.2","8.3","8.4"]
        node:     ["18","20","22"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Final ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/amd64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64 \
              --cache-from type=gha,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-amd64 \
              --cache-to type=gha,mode=max,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-amd64 \
              --load \
              compose/docker/php-node-symfony
      
      # Push with retry (handles network errors)
      - name: Push PHP Final ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64
  build-php-node-8-x-arm64:
    name: Build PHP 8.x + Node.js images (ARM64)
    needs: [create-php-8-x-manifest]
    runs-on: [self-hosted, Linux, ARM64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.1","8.2","8.3","8.4"]
        node:     ["18","20","22"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Final ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/arm64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64 \
              --cache-from type=gha,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-arm64 \
              --cache-to type=gha,mode=max,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-arm64 \
              --load \
              compose/docker/php-node-symfony
      
      # Push with retry (handles network errors)
      - name: Push PHP Final ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64
  create-php-node-8-x-manifest:
    name: Create PHP 8.x + Node.js multi-arch manifests
    needs: [build-php-node-8-x-amd64, build-php-node-8-x-arm64]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.1","8.2","8.3","8.4"]
        node:     ["18","20","22"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-arch manifest for ${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }} \
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64

  build-php-node-8-5-amd64:
    name: Build PHP 8.5 + Node.js images (AMD64)
    needs: [create-php-8-5-manifest]
    runs-on: [self-hosted, Linux, X64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.5"]
        node:     ["22","24"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Final ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/amd64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64 \
              --cache-from type=gha,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-amd64 \
              --cache-to type=gha,mode=max,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-amd64 \
              --load \
              compose/docker/php-node-symfony
      
      # Push with retry (handles network errors)
      - name: Push PHP Final ${{ matrix.php }} (AMD64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64
  build-php-node-8-5-arm64:
    name: Build PHP 8.5 + Node.js images (ARM64)
    needs: [create-php-8-5-manifest]
    runs-on: [self-hosted, Linux, ARM64]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.5"]
        node:     ["22","24"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to Docker Hub (optional, increases rate limit from 100 to 200 pulls/6h)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      # Build with retry (handles Docker Hub rate limits)
      - name: Build PHP Final ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker buildx build \
              --file compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }} \
              --platform linux/arm64 \
              --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64 \
              --cache-from type=gha,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-arm64 \
              --cache-to type=gha,mode=max,scope=php-${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-arm64 \
              --load \
              compose/docker/php-node-symfony
      
      # Push with retry (handles network errors)
      - name: Push PHP Final ${{ matrix.php }} (ARM64)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker push ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64
  create-php-node-8-5-manifest:
    name: Create PHP 8.5 + Node.js multi-arch manifests
    needs: [build-php-node-8-5-amd64, build-php-node-8-5-arm64]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        php:      ["8.5"]
        node:     ["22","24"]
        composer: ["2"]
        variant:  ["alpine"]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-arch manifest for ${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }} \
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}-arm64
