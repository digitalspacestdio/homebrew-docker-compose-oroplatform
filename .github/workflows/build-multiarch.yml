name: Build & Publish multi-arch images to GHCR
on:
  push: { branches: [ master ] }
  workflow_dispatch:

jobs:
  build-7-4:
    name: Build PHP 7.4 images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:      [7.4]
        node:     [16,18,20]
        composer: [1,2]
        variant:  [alpine]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with: { registry: ghcr.io, username: ${{ github.actor }}, password: ${{ secrets.GITHUB_TOKEN }} }
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: >
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}
            NODE_VERSION=${{ matrix.node }}
            COMPOSER_VERSION=${{ matrix.composer }}

  build-8x:
    name: Build PHP 8.x images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:      [8.1,8.2,8.3,8.4]
        node:     [18,20]
        composer: [2]
        variant:  [alpine]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with: { registry: ghcr.io, username: ${{ github.actor }}, password: ${{ secrets.GITHUB_TOKEN }} }
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: compose/docker/php-node-symfony/Dockerfile.${{ matrix.php }}.${{ matrix.variant }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: >
            ghcr.io/${{ github.repository_owner }}/orodc-php-node-symfony:${{ matrix.php }}-${{ matrix.node }}-${{ matrix.composer }}-${{ matrix.variant }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}
            NODE_VERSION=${{ matrix.node }}
            COMPOSER_VERSION=${{ matrix.composer }}