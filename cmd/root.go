package cmd

import (
	"fmt"
	"os"

	"github.com/spf13/cobra"
)

// GetOroDCLogo returns the ASCII art logo for OroDC
func GetOroDCLogo() string {
	return `
 โโโโโโโ โโโโโโโ  โโโโโโโ โโโโโโโ  โโโโโโโ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
โโโ   โโโโโโโโโโโโโโ   โโโโโโ  โโโโโโ     
โโโ   โโโโโโโโโโโโโโ   โโโโโโ  โโโโโโ     
โโโโโโโโโโโโ  โโโโโโโโโโโโโโโโโโโโโโโโโโโโ
 โโโโโโโ โโโ  โโโ โโโโโโโ โโโโโโโ  โโโโโโโ
                                          
๐ณ Docker-based OroPlatform Development Environment
โก Powered by Docker Compose & PHP 8.x`
}

// GetOroDCHeader returns a compact header for commands
func GetOroDCHeader() string {
	return `
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
โ  โโโโโโโ โโโโโโโ  โโโโโโโ โโโโโโโ  โโโโโโโ               โ
โ โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ               โ
โ โโโ   โโโโโโโโโโโโโโ   โโโโโโ  โโโโโโ                    โ
โ โโโ   โโโโโโโโโโโโโโ   โโโโโโ  โโโโโโ                    โ
โ โโโโโโโโโโโโ  โโโโโโโโโโโโโโโโโโโโโโโโโโโโ               โ
โ  โโโโโโโ โโโ  โโโ โโโโโโโ โโโโโโโ  โโโโโโโ               โ
โ                                                           โ
โ  ๐ณ OroPlatform Development Environment Manager           โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ`
}

var rootCmd = &cobra.Command{
	Use:   "orodc-go",
	Short: "OroDC CLI utility for Oro developer environments",
	Long: GetOroDCLogo() + `

OroDC (Oro Docker Compose) helps manage docker-based OroPlatform development environments.

Features:
โข ๐ Quick OroPlatform setup and installation
โข ๐ณ Docker Compose orchestration
โข ๐ง Database management (MySQL/PostgreSQL)
โข ๐ Service networking and port management
โข ๐ฆ Volume and data persistence
โข ๐ SSH access and key management
โข โก PHP/Node.js version detection
โข ๐งน Environment cleanup and purging

Perfect for OroPlatform developers who want a streamlined Docker-based workflow!`,
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Print(GetOroDCLogo())
		fmt.Println("\n")
		fmt.Println("๐ Welcome to OroDC - OroPlatform Development Environment Manager!")
		fmt.Println("")
		fmt.Println("๐ Use `orodc-go --help` to see all available commands.")
		fmt.Println("๐ฏ Use `orodc-go install` to setup a new OroPlatform environment.")
		fmt.Println("๐ณ Use `orodc-go up -d` to start your development environment.")
		fmt.Println("")
		fmt.Println("๐ก Pro tip: Run commands from your OroPlatform project directory!")
	},
}

var versionCmd = &cobra.Command{
	Use:   "version",
	Short: "Show OroDC version information",
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Print(GetOroDCLogo())
		fmt.Println("\n")
		fmt.Println("๐ฆ OroDC (Oro Docker Compose) - Golang Edition")
		fmt.Println("๐ท๏ธ  Version: 1.0.0")
		fmt.Println("๐ณ Docker Compose support: โ")
		fmt.Println("๐ง OroPlatform support: โ")
		fmt.Println("โก PHP 8.x support: โ")
		fmt.Println("")
		fmt.Println("๐ป Built with Go and Cobra CLI framework")
		fmt.Println("๐ Equivalent functionality to bash version")
	},
}

func Execute() {
	if err := rootCmd.Execute(); err != nil {
		fmt.Fprintf(os.Stderr, "โ %v\n", err)
		os.Exit(1)
	}
}

func init() {
	rootCmd.AddCommand(versionCmd)
}
